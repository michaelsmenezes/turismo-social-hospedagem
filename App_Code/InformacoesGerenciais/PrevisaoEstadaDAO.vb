Imports System
Imports System.Collections
Imports System.Text
Imports Microsoft.VisualBasic

Public Class PrevisaoEstadaDAO
    Public Function ConsultaPrevisao(ByVal ObjPrevisaoEstadaVO As PrevisaoEstadaVO, ByVal AliasBanco As String, ByVal DataIni As String, ByVal DataFim As String, ByVal Bloco As String, ByVal Acomodacao As String) As IList
        Try
            Dim Conn As New Banco.Conexao(AliasBanco)
            Dim VarSql As New Text.StringBuilder
            With VarSql


                .AppendLine("Declare @DataIni datetime, @DataFim dateTime, @acmFederacao varchar(3) ")
                .AppendLine("Set @DataIni = '" & String.Format(CDate(DataIni), "yyyy-MM-dd 23:00:00") & "' ") ' 2018-11-21 23:00:00' ")
                '.AppendLine("set @acmFederacao = '' ")
                If Acomodacao = "T" Then
                    Acomodacao = ""
                End If
                .AppendLine("set @acmFederacao = '%' + '" & Acomodacao & "' + '%' ")
                .AppendLine("--Set @DataFim = '2018-11-14 12:00:00' ")

                .AppendLine("Declare @PrevisaoEstadaBase Table( ")
                .AppendLine("     prvBloId Int, ")
                .AppendLine("	 prvTotalLeitos numeric(18,2), ")
                .AppendLine("	 prvQtdeAptos numeric(18,2), ")
                .AppendLine("	 prvQtdeTotalAptos numeric(18,2), ")
                .AppendLine("	 prvBloDescricao Varchar(40), ")
                .AppendLine("	 prvDataPrevisao DateTime, ")
                .AppendLine("	 prvTotalPrevisao numeric(18,2), ")
                .AppendLine("	 prvEstada numeric(18,2), ")
                .AppendLine("	 prvConfirmados numeric(18,2), ")
                .AppendLine("	 prvApagar numeric(18,2), ")
                .AppendLine("	 prvBloqueados numeric(18,2), ")
                .AppendLine("	 prvManutencao numeric(18,2), ")
                .AppendLine("	 prvLivres numeric(18,2) ")
                .AppendLine(") ")

                .AppendLine("insert @PrevisaoEstadaBase(prvDataPrevisao,prvTotalPrevisao,prvBloId,prvBloDescricao,prvTotalLeitos,prvQtdeTotalAptos) ")
                .AppendLine("(select @DataIni,ISNULL(COUNT(1),0),ac.BloId, ")
                If AliasBanco.Contains("Caldas") Then
                    .AppendLine("case when ac.BloId = 1 then 'Rio Tocantins' ")
                    .AppendLine("     when ac.BloId = 2 then 'Rio Araguaia' ")
                    .AppendLine("	 when ac.BloId = 3 then 'Rio Paranaiba' ")
                    .AppendLine("	 when ac.BloId = 4 then 'Rio Vermelho' ")
                    .AppendLine("	 end DescricaoBloco, ")
                Else
                    .AppendLine("    'Todos', ") 'se for Pirenópolis
                End If

                .AppendLine("case when ac.BloId = 1 then (select sum(((acc.AcmCC*2)+ acc.AcmCS) * acc.AcmQtdeApto) from TbAcomodacao acc with (nolock) where acc.BloId = ac.BloId and acc.AcmFederacao like (@acmFederacao)) ")
                .AppendLine("     when ac.BloId = 2 then (select sum(((acc.AcmCC*2)+ acc.AcmCS) * acc.AcmQtdeApto) from TbAcomodacao acc with (nolock) where acc.BloId = ac.BloId and acc.AcmFederacao like (@acmFederacao)) ")
                .AppendLine("	 when ac.BloId = 3 then (select sum(((acc.AcmCC*2)+ acc.AcmCS) * acc.AcmQtdeApto) from TbAcomodacao acc with (nolock) where acc.BloId = ac.BloId and acc.AcmFederacao like (@acmFederacao)) ")
                .AppendLine("	 when ac.BloId = 4 then (select sum(((acc.AcmCC*2)+ acc.AcmCS) * acc.AcmQtdeApto) from TbAcomodacao acc with (nolock) where acc.BloId = ac.BloId and acc.AcmFederacao like (@acmFederacao)) ")
                .AppendLine("     end prvTotalLeitos, ")
                .AppendLine("	 (select ISNULL(sum(1),0) from TbApartamento ap with (nolock) inner join TbAcomodacao d with (nolock) on ap.AcmId = d.AcmId and d.BloId = ac.BloId and d.AcmFederacao like (@acmFederacao)) ")
                .AppendLine("from TbIntegrante i with (nolock) ")
                .AppendLine("inner join TbReserva r with (nolock) on r.ResId = i.ResId  ")
                .AppendLine("inner join TbHospedagem h with (nolock) on h.IntId = i.IntId ")
                .AppendLine("inner join TbAcomodacao ac with (nolock) on ac.AcmId = h.AcmId ")
                .AppendLine("where @DataIni between i.IntDataIni and i.IntDataFim ")
                .AppendLine("and r.ResStatus not in ('C','F') ")
                .AppendLine("and i.IntDataFimReal is null ")
                .AppendLine("and r.ResCaracteristica <> 'P' ")
                .AppendLine("and ac.AcmFederacao like @acmFederacao ")
                If Bloco <> "0" Then
                    .AppendLine("and ac.BloId = '" & Bloco & "' ")
                End If
                .AppendLine("group by ac.BloId ")
                .AppendLine(") ")
                .AppendLine("OPTION (OPTIMIZE FOR(@DataIni='2012-01-01')) ")

                .AppendLine("--Atualizando Estada ")
                .AppendLine("Update pv set pv.prvEstada =  ")
                .AppendLine("ISNULL((select ISNULL(COUNT(1),0) ")
                .AppendLine("from TbIntegrante i with (nolock) ")
                .AppendLine("inner join TbReserva r with (nolock) on r.ResId = i.ResId  ")
                .AppendLine("inner join TbHospedagem h with (nolock) on h.IntId = i.IntId ")
                .AppendLine("inner join TbAcomodacao ac with (nolock) on ac.AcmId = h.AcmId ")
                .AppendLine("where @DataIni between i.IntDataIni and i.IntDataFim ")
                .AppendLine("and r.ResStatus in ('E') ")
                .AppendLine("and i.IntDataFimReal is null ")
                .AppendLine("and i.IntDataIniReal is not null ")
                .AppendLine("--and h.HosStatus = 'A' ")
                .AppendLine("and r.ResCaracteristica <> 'P' ")
                .AppendLine("and pv.prvBloId = ac.BloId  ")
                .AppendLine("and ac.AcmFederacao like @acmFederacao ")
                If Bloco <> "0" Then
                    .AppendLine("and ac.BloId = '" & Bloco & "' ")
                End If
                .AppendLine("group by ac.BloId),0) ")
                .AppendLine("from @PrevisaoEstadaBase pv ")
                .AppendLine("OPTION (OPTIMIZE FOR(@DataIni='2012-01-01')) ")

                .AppendLine("--Atualizando Confirmados ")
                .AppendLine("Update pv set pv.prvConfirmados = ")
                .AppendLine("ISNULL((select ISNULL(COUNT(1),0) ")
                .AppendLine("from TbIntegrante i with (nolock) ")
                .AppendLine("inner join TbReserva r with (nolock) on r.ResId = i.ResId ")
                .AppendLine("inner join TbHospedagem h with (nolock) on h.IntId = i.IntId  ")
                .AppendLine("inner join TbAcomodacao ac with (nolock) on ac.AcmId = h.AcmId ")
                .AppendLine("where @DataIni between i.IntDataIni and i.IntDataFim ")
                .AppendLine("and r.ResStatus in ('R') ")
                .AppendLine("and i.IntDataFimReal is null ")
                .AppendLine("and r.ResCaracteristica <> 'P' ")
                .AppendLine("and pv.prvBloId = ac.BloId  ")
                .AppendLine("and ac.AcmFederacao like @acmFederacao ")
                If Bloco <> "0" Then
                    .AppendLine("and ac.BloId = '" & Bloco & "' ")
                End If
                .AppendLine("group by ac.BloId),0) ")
                .AppendLine("from @PrevisaoEstadaBase pv ")
                .AppendLine("OPTION (OPTIMIZE FOR(@DataIni='2012-01-01')) ")

                .AppendLine("--Atualizando Bloqueaos ")
                .AppendLine("Update pv set pv.prvBloqueados =  ")
                .AppendLine("ISNULL((select distinct ISNULL(COUNT(1),0) ")
                .AppendLine("from TbSolicitacao s with (nolock) ")
                .AppendLine("left join TbReserva r with (nolock)  on r.ResId = s.ResId ")
                .AppendLine("left join TbAcomodacao ac with (nolock) on ac.AcmId = s.AcmId ")
                .AppendLine("where @DataIni between s.SolDataIni and s.SolDataFim ")
                .AppendLine("and r.ResStatus not in ('F','C') ")
                .AppendLine("and pv.prvBloId = ac.BloId ")
                .AppendLine("and ac.AcmFederacao like @acmFederacao ")
                If Bloco <> "0" Then
                    .AppendLine("and ac.BloId = '" & Bloco & "' ")
                End If
                .AppendLine("group by ac.BloId),0) ")
                .AppendLine("from @PrevisaoEstadaBase pv ")
                .AppendLine("OPTION (OPTIMIZE FOR(@DataIni='2012-01-01')) ")

                .AppendLine("--Atualizando Manutencao ")
                .AppendLine("Update pv set pv.prvManutencao =  ")
                .AppendLine("ISNULL((select ISNULL(COUNT(1),0) ")
                .AppendLine("from [sql-adm].[DbHdManutencao].[dbo].TbSolicitacao m with (nolock) ")
                .AppendLine("inner join TbSolicitacao s with (nolock) on s.SolId = m.solIdTurismo ")
                .AppendLine("inner join TbAcomodacao ac with (nolock) on ac.AcmId = s.AcmId ")
                .AppendLine("where @DataIni between s.SolDataIni and s.SolDataFim ")
                .AppendLine("and m.solBloqueioApartamento = 'S' ")
                .AppendLine("and pv.prvBloId = ac.BloId ")
                .AppendLine("and ac.AcmFederacao like @acmFederacao ")
                If Bloco <> "0" Then
                    .AppendLine("and ac.BloId = '" & Bloco & "' ")
                End If
                .AppendLine("group by ac.BloId),0) ")
                .AppendLine("from @PrevisaoEstadaBase pv ")
                .AppendLine("OPTION (OPTIMIZE FOR(@DataIni='2012-01-01')) ")

                .AppendLine("--Atualizando Pendente de Pagamento ")
                .AppendLine("Update pv set pv.prvApagar =  ")
                .AppendLine("ISNULL((select ISNULL(COUNT(1),0) ")
                .AppendLine("from TbIntegrante i with (nolock) ")
                .AppendLine("inner join TbReserva r with (nolock) on r.ResId = i.ResId ")
                .AppendLine("inner join TbHospedagem h with (nolock) on h.IntId = i.IntId ")
                .AppendLine("inner join TbAcomodacao ac with (nolock) on ac.AcmId = h.AcmId ")
                .AppendLine("where @DataIni between i.IntDataIni and i.IntDataFim ")
                .AppendLine("and r.ResStatus in ('P') ")
                .AppendLine("and i.IntDataFimReal is null ")
                .AppendLine("and r.ResCaracteristica <> 'P' ")
                .AppendLine("and pv.prvBloId = ac.BloId ")
                .AppendLine("and ac.AcmFederacao like @acmFederacao ")
                If Bloco <> "0" Then
                    .AppendLine("and ac.BloId = '" & Bloco & "' ")
                End If
                .AppendLine("group by ac.BloId),0), ")
                .AppendLine("pv.prvLivres = isnull((prvQtdeTotalAptos - (prvBloqueados + prvManutencao)),0), ")
                .AppendLine("Pv.prvQtdeAptos = isnull((prvBloqueados + prvManutencao),0) ")
                .AppendLine("from @PrevisaoEstadaBase pv ")
                .AppendLine("OPTION (OPTIMIZE FOR(@DataIni='2012-01-01')) ")


                .AppendLine("select prvBloId Bloco , ")
                '.AppendLine("prvBloDescricao + REPLACE('(' + convert(varchar(15),prvQtdeTotalAptos) + ')','.00','') Caracteristica, ")
                .AppendLine("prvBloDescricao Caracteristica, ")
                .AppendLine("ISNULL(prvDataPrevisao,0)Data, ")

                .AppendLine("Replace(prvTotalLeitos,'.00','')prvTotalLeitos, ")
                .AppendLine("convert(varchar(6),Replace(ISNULL(prvTotalPrevisao,0),'.00','')) + case when prvTotalPrevisao > 0 then  ' = ' + convert(varchar(8), convert(decimal(18,2),prvTotalPrevisao * 100/prvTotalLeitos)) + '%' else ' = 00.00%' end prvTotalPrevisao, ")
                .AppendLine("convert(varchar(6),Replace(ISNULL(prvEstada,0),'.00','')) + case when prvEstada > 0 then  ' = ' + convert(varchar(8), convert(decimal(18,2),prvEstada * 100/prvTotalLeitos)) + '%' else ' = 00.00%' end  AptoE, ")
                .AppendLine("convert(varchar(6),Replace(ISNULL(prvConfirmados,0),'.00','')) + case when prvConfirmados > 0 then  ' = ' + convert(varchar(8), convert(decimal(18,2),prvConfirmados * 100/prvTotalLeitos)) + '%' else ' = 00.00%' end AptoR, ")
                .AppendLine("convert(varchar(6),Replace(ISNULL(prvApagar,0),'.00','')) + case when prvApagar > 0 then  ' = ' + convert(varchar(8), convert(decimal(18,2),prvApagar * 100/prvTotalLeitos)) + '%' else ' = 00.00%' end AptoP, ")

                .AppendLine("Replace(prvQtdeTotalAptos,'.00','')prvQtdeTotalAptos, ")
                .AppendLine("convert(varchar(6),Replace(ISNULL(prvQtdeAptos,0),'.00','')) + case when prvQtdeAptos > 0 then  ' = ' + convert(varchar(8), convert(decimal(18,2),prvQtdeAptos * 100/prvQtdeTotalAptos)) + '%' else ' = 00.00%' end prvQtdeAptos, ")
                .AppendLine("convert(varchar(6),Replace(ISNULL(prvBloqueados,0),'.00','')) + case when prvBloqueados > 0 then  ' = ' + convert(varchar(8), convert(decimal(18,2),prvBloqueados * 100/prvQtdeTotalAptos)) + '%' else ' = 00.00%' end prvBloqueados, ")
                .AppendLine("convert(varchar(6),Replace(ISNULL(prvManutencao,0),'.00','')) + case when prvManutencao > 0 then  ' = ' + convert(varchar(8), convert(decimal(18,2),prvManutencao * 100/prvQtdeTotalAptos)) + '%' else ' = 00.00%' end AptoM, ")
                .AppendLine("convert(varchar(6),Replace(ISNULL(prvLivres,0),'.00','')) + case when prvLivres > 0 then  ' = ' + convert(varchar(8), convert(decimal(18,2),prvLivres * 100/prvQtdeTotalAptos)) + '%' else ' = 00.00%' end Livre ")

                .AppendLine("from @PrevisaoEstadaBase ")

                '.Append("declare ")
                '.Append("  @DataIni char(10), ")
                '.Append("  @DataFim char(10), ")
                '.Append("  @StatusR char(1), ")
                '.Append("  @StatusE char(1), ")
                '.Append("  @StatusP char(1), ")
                '.Append("  @StatusI char(1), ")
                '.Append("  @Bloco varchar(10), ")
                '.Append("  @Acomodacao char(1) ")
                '.Append("set  @DataIni = '" & DataIni & "' ")
                '.Append("set  @DataFim ='" & DataFim & "' ")
                '.Append("set  @StatusR ='S' ")
                '.Append("set  @StatusE ='S' ")
                '.Append("set  @StatusP ='S' ")
                '.Append("set  @StatusI ='S' ")
                '.Append("set  @Bloco = 'Todos' ")
                '.Append("set  @Acomodacao = '" & Acomodacao & "' ")
                '.Append("set nocount on ")
                '.Append("declare  ")
                '.Append("  @SolDataFim datetime, ")
                '.Append("  @DataAux datetime, ")
                '.Append("  @SolDataIni datetime, ")
                '.Append("  @Divisor smallint ")
                '.Append("set @SolDataIni = convert(datetime, @DataIni + ' 12:00', 103) ")
                '.Append("set @SolDataFim = convert(datetime, @DataFim + ' 12:00', 103) ")
                '.Append("create table #Periodo( ")
                '.Append("  Data datetime, ")
                '.Append("  Data1 datetime, ")
                '.Append("  AcmId numeric, ")
                '.Append("  Bloco varchar(15), ")
                '.Append("  Caracteristica integer, ")
                '.Append("  Ordem char(1), ")
                '.Append("  AptoR integer default(0), ")
                '.Append("  HospR integer default(0), ")
                '.Append("  AptoE integer default(0), ")
                '.Append("  HospE integer default(0), ")
                '.Append("  AptoP integer default(0), ")
                '.Append("  HospP integer default(0), ")
                '.Append("  AptoI integer default(0), ")
                '.Append("  HospI integer default(0), ")
                '.Append("  AptoM integer default(0)) ")
                '.Append("if @SolDataIni > @SolDataFim ")
                '.Append("begin ")
                '.Append("  set @DataAux = @SolDataIni ")
                '.Append("  set @SolDataIni = @SolDataFim ")
                '.Append("  set @SolDataFim = @DataAux ")
                '.Append("end  ")
                '.Append("if @SolDataIni = @SolDataFim ")
                '.Append("begin ")
                '.Append("  set @SolDataIni = convert(datetime, @DataIni + ' 12:01', 103) ")
                '.Append("  set @SolDataFim = convert(datetime, @DataFim + ' 23:59', 103) ")
                '.Append("  set @Divisor = 1 ")
                '.Append("  insert #Periodo (Data, Data1, AcmId, Bloco, Caracteristica, Ordem) ")
                '.Append("    select @SolDataIni, @SolDataFim, a.AcmId, ' ' + c.CarDescricaoSucinto, c.CarId, '0' ")
                '.Append("      from TbAcomodacao a inner join  ")
                '.Append("      TbCaracteristicaAcm ca  ")
                '.Append("      on a.AcmId = ca.AcmId ")
                '.Append("      inner join TbCaracteristica c ")
                '.Append("      on ca.CarId = c.CarId ")
                '.Append("      where CarGrupo = '0BLOCO' ")
                '.Append("      and c.CarDescricaoSucinto = ")
                '.Append("        case ")
                '.Append("          when @Bloco = 'Todos' then c.CarDescricaoSucinto ")
                '.Append("          else @Bloco ")
                '.Append("        end ")
                '.Append("      and a.AcmFederacao = ")
                '.Append("        case ")
                '.Append("          when @Acomodacao = 'T' then a.AcmFederacao ")
                '.Append("          else @Acomodacao ")
                '.Append("        end ")
                '.Append("end ")
                '.Append("else ")
                '.Append("begin ")
                '.Append("  set @Divisor = datediff(dd, @SolDataIni, @SolDataFim) ")
                '.Append("  set @DataAux = convert(datetime, @SolDataIni, 103) ")
                '.Append("  while @SolDataFim > @DataAux ")
                '.Append("  begin ")
                '.Append("    insert #Periodo (Data, Data1, AcmId, Bloco, Caracteristica, Ordem) ")
                '.Append("      select dateadd(mi, 1, @DataAux), dateadd(mi, -1, @DataAux + 1), a.AcmId, ' ' + rtrim(c.CarDescricaoSucinto), c.CarId, '0' ")
                '.Append("        from TbAcomodacao a inner join  ")
                '.Append("        TbCaracteristicaAcm ca ")
                '.Append("        on a.AcmId = ca.AcmId  ")
                '.Append("        inner join TbCaracteristica c ")
                '.Append("        on ca.CarId = c.CarId ")
                '.Append("        where CarGrupo = '0BLOCO' ")
                '.Append("        and c.CarDescricaoSucinto = ")
                '.Append("         case ")
                '.Append("            when @Bloco = 'Todos' then c.CarDescricaoSucinto ")
                '.Append("            else @Bloco ")
                '.Append("          end ")
                '.Append("      and a.AcmFederacao = ")
                '.Append("        case ")
                '.Append("          when @Acomodacao = 'T' then a.AcmFederacao ")
                '.Append("          else @Acomodacao ")
                '.Append("        end ")
                '.Append("    set @DataAux = dateadd(dd, 1, @DataAux) ")
                '.Append("  end ")
                '.Append("end ")
                '.Append("update #Periodo ")
                '.Append("  set AptoR = ")
                '.Append("    case ")
                '.Append("      when @StatusR = 'S' then ")
                '.Append("        isnull((select count(distinct SolId) ")
                '.Append("          from TbSolicitacao s inner join TbReserva r ")
                '.Append("          on s.ResId = r.ResId where ")
                '.Append("          r.ResStatus = 'R' and ")
                '.Append("          s.AcmId = #Periodo.AcmId and ")
                '.Append("          ((s.SolDataIni between #Periodo.Data and #Periodo.Data1) or ")
                '.Append("           (s.SolDataFim between #Periodo.Data and #Periodo.Data1) or ")
                '.Append("           (#Periodo.Data between s.SolDataIni and s.SolDataFim) or ")
                '.Append("           (#Periodo.Data1 between s.SolDataIni and s.SolDataFim)) ")
                '.Append("),0) ")
                '.Append("    else 0 ")
                '.Append("    end, ")
                '.Append("  AptoE = ")
                '.Append("    case ")
                '.Append("      when @StatusE = 'S' then ")
                '.Append("        isnull((select count(distinct s.SolId) ")
                '.Append("          from TbSolicitacao s inner join TbReserva r ")
                '.Append("          on s.ResId = r.ResId where ")
                '.Append("          r.ResStatus = 'E' and ")
                '.Append("          s.AcmId = #Periodo.AcmId and ")
                '.Append("          ((s.SolDataIni between #Periodo.Data and #Periodo.Data1) or ")
                '.Append("           (s.SolDataFim between #Periodo.Data and #Periodo.Data1) or ")
                '.Append("           (#Periodo.Data between s.SolDataIni and s.SolDataFim) or ")
                '.Append("           (#Periodo.Data1 between s.SolDataIni and s.SolDataFim)) ")
                '.Append("),0) ")
                '.Append("    else 0 ")
                '.Append("    end, ")
                '.Append("  AptoP = ")
                '.Append("    case ")
                '.Append("      when @StatusP = 'S' then ")
                '.Append("        isnull((select count(distinct SolId) ")
                '.Append("          from TbSolicitacao s inner join TbReserva r ")
                '.Append("          on s.ResId = r.ResId where ")
                '.Append("          ((r.ResStatus = 'P') ")
                '.Append("          ) and ")
                '.Append("          s.AcmId = #Periodo.AcmId and ")
                '.Append("          ((s.SolDataIni between #Periodo.Data and #Periodo.Data1) or ")
                '.Append("           (s.SolDataFim between #Periodo.Data and #Periodo.Data1) or ")
                '.Append("           (#Periodo.Data between s.SolDataIni and s.SolDataFim) or ")
                '.Append("           (#Periodo.Data1 between s.SolDataIni and s.SolDataFim)) ")
                '.Append("),0) ")
                '.Append("    else 0 ")
                '.Append("    end, ")
                '.Append("  AptoI = ")
                '.Append("    case ")
                '.Append("      when @StatusI = 'S' then ")
                '.Append("        isnull((select count(distinct SolId) ")
                '.Append("          from TbSolicitacao s inner join TbReserva r ")
                '.Append("          on s.ResId = r.ResId where ")
                '.Append("          r.ResStatus = 'I' and ")
                '.Append("          s.AcmId = #Periodo.AcmId and ")
                '.Append("          ((s.SolDataIni between #Periodo.Data and #Periodo.Data1) or ")
                '.Append("           (s.SolDataFim between #Periodo.Data and #Periodo.Data1) or ")
                '.Append("           (#Periodo.Data between s.SolDataIni and s.SolDataFim) or ")
                '.Append("           (#Periodo.Data1 between s.SolDataIni and s.SolDataFim)) ")
                '.Append("),0) ")
                '.Append("    else 0 ")
                '.Append("    end, ")
                '.Append("  AptoM = isnull((select count(distinct SolId) ")
                '.Append("          from TbSolicitacao s where ")
                '.Append("          s.ResId is null and ")
                '.Append("          s.AcmId = #Periodo.AcmId and ")
                '.Append("          ((s.SolDataIni between #Periodo.Data and #Periodo.Data1) or ")
                '.Append("           (s.SolDataFim between #Periodo.Data and #Periodo.Data1) or ")
                '.Append("           (#Periodo.Data between s.SolDataIni and s.SolDataFim) or ")
                '.Append("           (#Periodo.Data1 between s.SolDataIni and s.SolDataFim)) ")
                '.Append("),0) ")
                '.Append("if @Bloco = 'Todos' ")
                '.Append("begin ")
                '.Append("  insert #Periodo (Data, Data1, AcmId, Bloco, Caracteristica, Ordem) ")
                '.Append("    select getdate(), getdate(), 0, 'Média', 0, '1' ")
                '.Append("  update #Periodo ")
                '.Append("    set AptoR = (select sum(p.AptoR) ")
                '.Append("    from #Periodo p) ")
                '.Append("    where Bloco = 'Média' ")
                '.Append("  update #Periodo ")
                '.Append("    set AptoE = (select sum(p.AptoE) ")
                '.Append("    from #Periodo p) ")
                '.Append("    where Bloco = 'Média' ")
                '.Append("  update #Periodo ")
                '.Append("    set AptoI = (select sum(p.AptoI) ")
                '.Append("    from #Periodo p) ")
                '.Append("    where Bloco = 'Média' ")
                '.Append("  update #Periodo ")
                '.Append("    set AptoP = (select sum(p.AptoP) ")
                '.Append("    from #Periodo p) ")
                '.Append("    where Bloco = 'Média' ")
                '.Append("  update #Periodo ")
                '.Append("    set AptoM = (select sum(p.AptoM) ")
                '.Append("    from #Periodo p) ")
                '.Append("    where Bloco = 'Média' ")
                '.Append("  select GetDate() as Data,  ")
                '.Append("    p.Bloco, Caracteristica, ")
                '.Append("    sum(p.AptoR) / @Divisor AptoR, ")
                '.Append("    sum(p.HospR) / @Divisor HospR, ")
                '.Append("    sum(p.AptoE) / @Divisor AptoE, ")
                '.Append("    sum(p.HospE) / @Divisor HospE, ")
                '.Append("    sum(p.AptoP) / @Divisor AptoP, ")
                '.Append("    sum(p.HospP) / @Divisor HospP, ")
                '.Append("    sum(p.AptoI) / @Divisor AptoI, ")
                '.Append("    sum(p.HospI) / @Divisor HospI, ")
                '.Append("    sum(p.AptoM) / @Divisor AptoM, ")
                '.Append("    case ")
                '.Append("      when p.Bloco <> 'Média' then ")
                '.Append("        (select sum(a.AcmQtdeApto) from TbAcomodacao a ")
                '.Append("           where a.AcmId in ")
                '.Append("           (select pp.AcmId from #Periodo pp ")
                '.Append("             where pp.Bloco = p.Bloco) ")
                '.Append("           and a.AcmFederacao = ")
                '.Append("        case ")
                '.Append("          when @Acomodacao = 'T' then a.AcmFederacao ")
                '.Append("          else @Acomodacao ")
                '.Append("        end) ")
                '.Append("      else ")
                '.Append("        (select sum(a.AcmQtdeApto) from TbAcomodacao a where  ")
                '.Append("        a.AcmFederacao = ")
                '.Append("        case ")
                '.Append("          when @Acomodacao = 'T' then a.AcmFederacao ")
                '.Append("          else @Acomodacao ")
                '.Append("        end) ")
                '.Append("      end as AcmQtde ")
                '.Append("    from #Periodo p ")
                'If Bloco <> "Todos" Then
                '    .Append(" where p.Caracteristica = " & Bloco & " ")
                'End If
                '.Append("    group by p.Bloco, Caracteristica ")
                '.Append("    order by p.Bloco  ")
                '.Append("end ")
                '.Append("drop table #Periodo ")
            End With
            Return PreencheLista(Conn.consulta(VarSql.ToString))
        Catch ex As Exception
            Throw New Exception(ex.StackTrace.ToString.Replace(Chr(13), ""))
        End Try
    End Function
    Private Function PreencheLista(ByVal ResultadoConsulta As System.Data.SqlClient.SqlDataReader) As IList
        Dim Lista As New ArrayList
        If ResultadoConsulta.HasRows Then
            While ResultadoConsulta.Read
                Dim ObjPrevisaoEstadaVO = New PrevisaoEstadaVO
                With ObjPrevisaoEstadaVO
                    .Data = ResultadoConsulta.Item("Data")
                    .Bloco = ResultadoConsulta.Item("Bloco")
                    .Caracteristica = ResultadoConsulta.Item("Caracteristica")
                    .AptoR = ResultadoConsulta.Item("AptoR")
                    .AptoE = ResultadoConsulta.Item("AptoE")
                    .AptoP = ResultadoConsulta.Item("AptoP")
                    .AptoM = ResultadoConsulta.Item("AptoM")
                    .Livre = ResultadoConsulta.Item("Livre")
                    '.prvDataPrevisao = ResultadoConsulta.Item("prvDataPrevisao")
                    .prvTotalLeitos = ResultadoConsulta.Item("prvTotalLeitos")
                    .prvTotalPrevisao = ResultadoConsulta.Item("prvTotalPrevisao")
                    .prvQtdeTotalAptos = ResultadoConsulta.Item("prvQtdeTotalAptos")
                    .prvQtdeAptos = ResultadoConsulta.Item("prvQtdeAptos")
                    .prvBloqueados = ResultadoConsulta.Item("prvBloqueados")

                    '.Data = ResultadoConsulta.Item("Data")
                    '.AcmQtde = ResultadoConsulta.Item("AcmQtde")
                    '.AptoE = ResultadoConsulta.Item("AptoE")
                    '.AptoI = ResultadoConsulta.Item("AptoI")
                    '.AptoM = ResultadoConsulta.Item("AptoM")
                    '.AptoP = ResultadoConsulta.Item("AptoP")
                    '.AptoR = ResultadoConsulta.Item("AptoR")
                    '.Bloco = ResultadoConsulta.Item("Bloco") & "(" & .AcmQtde & ")"
                    '.Caracteristica = ResultadoConsulta.Item("Caracteristica")
                    '.HospE = ResultadoConsulta.Item("HospE")
                    '.HospI = ResultadoConsulta.Item("HospI")
                    '.HospP = ResultadoConsulta.Item("HospP")
                    '.HospR = ResultadoConsulta.Item("HospR")
                    '.Total = String.Format((CInt(.AptoE) + CInt(.AptoR) + CInt(.AptoP) + CInt(.AptoI) + CInt(.AptoM)) * 100 / CInt(.AcmQtde), "##0.0") & "%"
                    '.Livre = CInt(.AcmQtde) - (CInt(.AptoE) + CInt(.AptoR) + CInt(.AptoP) + CInt(.AptoI) + CInt(.AptoM))
                    ''Aptos Formatado para o Grid
                    '.AptoE = ResultadoConsulta.Item("AptoE") & "=" & String.Format(CInt(.AptoE) * 100 / CInt(.AcmQtde), "##0.0") & "%"
                    '.AptoR = ResultadoConsulta.Item("AptoR") & "=" & String.Format(CInt(.AptoR) * 100 / CInt(.AcmQtde), "##0.0") & "%"
                    '.AptoP = ResultadoConsulta.Item("AptoP") & "=" & String.Format(CInt(.AptoP) * 100 / CInt(.AcmQtde), "##0.0") & "%"
                    '.AptoI = ResultadoConsulta.Item("AptoI") & "=" & String.Format(CInt(.AptoI) * 100 / CInt(.AcmQtde), "##0.0") & "%"
                    '.AptoM = ResultadoConsulta.Item("AptoM") & "=" & String.Format(CInt(.AptoM) * 100 / CInt(.AcmQtde), "##0.0") & "%"
                    '.Livre = CInt(.Livre) & "=" & String.Format(CInt(.Livre) * 100 / CInt(.AcmQtde), "##0.0") & "%"
                End With
                Lista.Add(ObjPrevisaoEstadaVO)
            End While
        End If
        ResultadoConsulta.Close()
        Return Lista
    End Function

    Public Function ConsultaOverBook(AliasBanco As String, DataBase As DateTime, DiasBusca As Integer) As IList
        Dim Conn As New Banco.Conexao(AliasBanco)
        Dim VarSql As New Text.StringBuilder
        With VarSql
            .AppendLine("	Declare @Base Table(	")
            .AppendLine("	    ResId int,	")
            .AppendLine("	ResNome Varchar(100),	")
            .AppendLine("	ResStatus Varchar(50),	")
            .AppendLine("	SolId int,	")
            .AppendLine("	AcmId int,	")
            .AppendLine("	SolDataIni DateTime,	")
            .AppendLine("	SolDataFim DateTime,	")
            .AppendLine("	DataReferencia Datetime	")
            .AppendLine("	)	")

            .AppendLine("	Declare @DataReferencia Datetime, @SaidaIni Datetime,@SaidaFim Datetime	")
            .AppendLine("	Declare @Passadas integer = " & DiasBusca & ", @contador integer = 0 	")

            .AppendLine("	Set @DataReferencia = '" & String.Format(DataBase, "yyyy-MM-dd") & " 12:00:00" & "' ")
            .AppendLine("	Set @SaidaIni =  CONVERT(char(10),@DataReferencia,120) + ' 11:59:59' 	")
            .AppendLine("	set @SaidaFim = CONVERT(char(10),@DataReferencia,120) + ' 12:00:20'	")

            .AppendLine("	While @contador < @Passadas	")
            .AppendLine("	   Begin	")
            .AppendLine("	      if @contador > 0	")
            .AppendLine("	    Begin	")
            .AppendLine("	Set @DataReferencia = DATEADD(day,1,@DataReferencia)	")
            .AppendLine("	Set @SaidaIni = DATEADD(day,1,@SaidaIni)	")
            .AppendLine("	Set @SaidaFim = DATEADD(day,1,@SaidaFim)	")
            .AppendLine("	end	")
            .AppendLine("	insert @Base 	")
            .AppendLine("	select r.ResId,r.ResNome,	")
            .AppendLine("	Case when r.ResStatus = 'R' and s.SolDataFim  between @SaidaIni and @SaidaFim then 'Saída' 	")
            .AppendLine("	     when r.ResStatus = 'R' Then 'Confirmada'	")
            .AppendLine("	 when r.ResStatus = 'P' and s.SolDataFim  between @SaidaIni and @SaidaFim then 'Saída' 	")
            .AppendLine("	 when r.ResStatus = 'P' Then 'Pendente de Pagamento'	")
            .AppendLine("	 When r.ResStatus = 'E' and s.SolDataFim  between @SaidaIni and @SaidaFim then 'Saída' 	")
            .AppendLine("	     when r.ResStatus = 'E' then 'Estada'	")
            .AppendLine("	 When r.ResStatus = 'I' and s.SolDataFim  between @SaidaIni and @SaidaFim then 'Saída' 	")
            .AppendLine("	 when r.ResStatus = 'I' Then 'Pendente de Integrante'	")
            .AppendLine("	 else 'Outras'	")
            .AppendLine("	 end resStatus,	")
            .AppendLine("	s.SolId,s.AcmId ,s.SolDataIni,SolDataFim, @DataReferencia 	")
            .AppendLine("	from TbSolicitacao s 	")
            .AppendLine("	inner join TbReserva r on r.ResId = s.ResId 	")
            .AppendLine("	where (@DataReferencia between s.SolDataIni and s.SolDataFim 	")
            .AppendLine("	or s.SolDataFim  between @SaidaIni and @SaidaFim)	")
            .AppendLine("	--and s.resid > 0	")
            .AppendLine("	--and r.ResStatus  <> 'I'	")
            .AppendLine("	--and not s.SolDataFim  between @SaidaIni and @SaidaFim --Saídas	")
            .AppendLine("	order by r.ResStatus 	")

            .AppendLine("	--Inserindo Apartamentos em Manutenção	")
            .AppendLine("	insert @Base 	")
            .AppendLine("	select s.ResId,'' ResNome,	")
            .AppendLine("	'Manutencao' ResStatus,	")
            .AppendLine("	s.SolId,s.AcmId ,s.SolDataIni,SolDataFim, @DataReferencia 	")
            .AppendLine("	from TbSolicitacao s 	")
            .AppendLine("	where (@DataReferencia between s.SolDataIni and s.SolDataFim 	")
            .AppendLine("	or s.SolDataFim  between @SaidaIni and @SaidaFim)	")
            .AppendLine("	and s.ResId is Null 	")
            .AppendLine("	  	")
            .AppendLine("	set @contador += 1	")
            .AppendLine("	   end	")

            .AppendLine("	   --Select b.*,a.AcmDescricao from @Base b inner join TbAcomodacao a on a.AcmId = b.AcmId where A.AcmFederacao IN ('E','R')  order by DataReferencia--,AcmId 	")

            .AppendLine("	   --Localiza overbook por acomodadacao	")
            .AppendLine("	   select b.DataReferencia, b.AcmId,ac.AcmDescricao, sum(1)Vendidos,(select a.AcmQtdeApto from TbAcomodacao a where a.AcmId = b.AcmId)Existentes 	")
            .AppendLine("	   from @Base b 	")
            .AppendLine("	   inner join TbAcomodacao ac on ac.AcmId = b.AcmId 	")
            .AppendLine("	   where 	")
            .AppendLine("	    b.ResStatus <> 'Saída' 	")
            .AppendLine("	and b.DataReferencia between CONVERT(char(10),b.SolDataIni,120) + ' 11:59:59'  and  CONVERT(char(10),b.SolDataFim,120) + ' 11:59:59' 	")
            .AppendLine("	   and b.SolDataFim >= b.DataReferencia 	")
            .AppendLine("	   group by b.AcmId,b.DataReferencia,ac.AcmDescricao 	")
            .AppendLine("	   Having (sum(1) > (select a.AcmQtdeApto from TbAcomodacao a where a.AcmId = b.AcmId)) 	")
            .AppendLine("	   order by b.DataReferencia 	")
        End With
        Return PreencheListaOverBook(Conn.consulta(VarSql.ToString), "O")
    End Function

    Public Function RelacaodeSolicitacoesPorStatus(AliasBanco As String, DataBase As DateTime, DiasBusca As Integer) As IList
        Dim Conn As New Banco.Conexao(AliasBanco)
        Dim VarSql As New Text.StringBuilder
        With VarSql
            .AppendLine("	Declare @Base Table(	")
            .AppendLine("	    ResId int,	")
            .AppendLine("	ResNome Varchar(100),	")
            .AppendLine("	ResStatus Varchar(50),	")
            .AppendLine("	SolId int,	")
            .AppendLine("	AcmId int,	")
            .AppendLine("	SolDataIni DateTime,	")
            .AppendLine("	SolDataFim DateTime,	")
            .AppendLine("	DataReferencia Datetime	")
            .AppendLine("	)	")

            .AppendLine("	Declare @DataReferencia Datetime, @SaidaIni Datetime,@SaidaFim Datetime	")
            .AppendLine("	Declare @Passadas integer = " & DiasBusca & ", @contador integer = 0 	")

            .AppendLine("	Set @DataReferencia = '" & String.Format(DataBase, "yyyy-MM-dd") & " 12:00:00" & "' ")
            .AppendLine("	Set @SaidaIni =  CONVERT(char(10),@DataReferencia,120) + ' 11:59:59' 	")
            .AppendLine("	set @SaidaFim = CONVERT(char(10),@DataReferencia,120) + ' 12:00:20'	")

            .AppendLine("	While @contador < @Passadas	")
            .AppendLine("	   Begin	")
            .AppendLine("	      if @contador > 0	")
            .AppendLine("	    Begin	")
            .AppendLine("	Set @DataReferencia = DATEADD(day,1,@DataReferencia)	")
            .AppendLine("	Set @SaidaIni = DATEADD(day,1,@SaidaIni)	")
            .AppendLine("	Set @SaidaFim = DATEADD(day,1,@SaidaFim)	")
            .AppendLine("	end	")
            .AppendLine("	insert @Base 	")
            .AppendLine("	select r.ResId,r.ResNome,	")
            .AppendLine("	Case when r.ResStatus = 'R' and s.SolDataFim  between @SaidaIni and @SaidaFim then 'Saída' 	")
            .AppendLine("	     when r.ResStatus = 'R' Then 'Confirmada'	")
            .AppendLine("	 when r.ResStatus = 'P' and s.SolDataFim  between @SaidaIni and @SaidaFim then 'Saída' 	")
            .AppendLine("	 when r.ResStatus = 'P' Then 'Pendente de Pagamento'	")
            .AppendLine("	 When r.ResStatus = 'E' and s.SolDataFim  between @SaidaIni and @SaidaFim then 'Saída' 	")
            .AppendLine("	     when r.ResStatus = 'E' then 'Estada'	")
            .AppendLine("	 When r.ResStatus = 'I' and s.SolDataFim  between @SaidaIni and @SaidaFim then 'Saída' 	")
            .AppendLine("	 when r.ResStatus = 'I' Then 'Pendente de Integrante'	")
            .AppendLine("	 else 'Outras'	")
            .AppendLine("	 end resStatus,	")
            .AppendLine("	s.SolId,s.AcmId ,s.SolDataIni,SolDataFim, @DataReferencia 	")
            .AppendLine("	from TbSolicitacao s 	")
            .AppendLine("	inner join TbReserva r on r.ResId = s.ResId 	")
            .AppendLine("	where (@DataReferencia between s.SolDataIni and s.SolDataFim 	")
            .AppendLine("	or s.SolDataFim  between @SaidaIni and @SaidaFim)	")
            .AppendLine("	--and s.resid > 0	")
            .AppendLine("	--and r.ResStatus  <> 'I'	")
            .AppendLine("	--and not s.SolDataFim  between @SaidaIni and @SaidaFim --Saídas	")
            .AppendLine("	order by r.ResStatus 	")

            .AppendLine("	--Inserindo Apartamentos em Manutenção	")
            .AppendLine("	insert @Base 	")
            .AppendLine("	select s.ResId,'' ResNome,	")
            .AppendLine("	'Manutencao' ResStatus,	")
            .AppendLine("	s.SolId,s.AcmId ,s.SolDataIni,SolDataFim, @DataReferencia 	")
            .AppendLine("	from TbSolicitacao s 	")
            .AppendLine("	where (@DataReferencia between s.SolDataIni and s.SolDataFim 	")
            .AppendLine("	or s.SolDataFim  between @SaidaIni and @SaidaFim)	")
            .AppendLine("	and s.ResId is Null 	")
            .AppendLine("	  	")
            .AppendLine("	set @contador += 1	")
            .AppendLine("	   end	")

            .AppendLine("	   --Select b.*,a.AcmDescricao from @Base b inner join TbAcomodacao a on a.AcmId = b.AcmId where A.AcmFederacao IN ('E','R')  order by DataReferencia--,AcmId 	")

            '.AppendLine("	   --Localiza overbook por acomodadacao	")
            '.AppendLine("	   select b.DataReferencia, b.AcmId,ac.AcmDescricao, sum(1)Vendidos,(select a.AcmQtdeApto from TbAcomodacao a where a.AcmId = b.AcmId)Existentes 	")
            '.AppendLine("	   from @Base b 	")
            '.AppendLine("	   inner join TbAcomodacao ac on ac.AcmId = b.AcmId 	")
            '.AppendLine("	   where 	")
            '.AppendLine("	    b.ResStatus <> 'Saída' 	")
            '.AppendLine("	and b.DataReferencia between CONVERT(char(10),b.SolDataIni,120) + ' 11:59:59'  and  CONVERT(char(10),b.SolDataFim,120) + ' 11:59:59' 	")
            '.AppendLine("	   and b.SolDataFim >= b.DataReferencia 	")
            '.AppendLine("	   group by b.AcmId,b.DataReferencia,ac.AcmDescricao 	")
            '.AppendLine("	   Having (sum(1) > (select a.AcmQtdeApto from TbAcomodacao a where a.AcmId = b.AcmId)) 	")
            '.AppendLine("	   order by b.DataReferencia 	")

            .AppendLine("	   --Preparando o resultado final para exibição	")
            .AppendLine("	   Declare @BaseFinal Table(	")
            .AppendLine("	   DataReferencia DateTime,	")
            .AppendLine("	   Confirmados int,	")
            .AppendLine("	   PendPagamento int,	")
            .AppendLine("	   Estada int,	")
            .AppendLine("	   PendIntegrante int,	")
            .AppendLine("	   SubTotal int,	")
            .AppendLine("	   Saidas int,	")
            .AppendLine("	   Outras int,	")
            .AppendLine("	   SomaTotal int	")
            .AppendLine("	   )	")

            .AppendLine("	   insert @BaseFinal(DataReferencia) 	")
            .AppendLine("	   select DataReferencia from @Base group by DataReferencia 	")


            .AppendLine("	   update bf set bf.Confirmados = isnull((select sum(1) from @Base b where ResStatus = 'Confirmada' and b.DataReferencia = bf.DataReferencia ),0), 	")
            .AppendLine("	                 bf.PendPagamento = isnull((select sum(1) from @Base b where ResStatus = 'Pendente de Pagamento' and b.DataReferencia = bf.DataReferencia ),0),	")
            .AppendLine("	 bf.PendIntegrante = isnull((select sum(1) from @Base b where ResStatus = 'Pendente de Integrante' and b.DataReferencia = bf.DataReferencia ),0),	")

            .AppendLine("	 bf.SubTotal = (isnull((select sum(1) from @Base b where ResStatus = 'Confirmada' and b.DataReferencia = bf.DataReferencia ),0) + 	")
            .AppendLine("	                                isnull((select sum(1) from @Base b where ResStatus = 'Pendente de Pagamento' and b.DataReferencia = bf.DataReferencia ),0) + 	")
            .AppendLine("	isnull((select sum(1) from @Base b where ResStatus = 'Estada' and b.DataReferencia = bf.DataReferencia ),0) + 	")
            .AppendLine("	                isnull((select sum(1) from @Base b where ResStatus = 'Pendente de Integrante' and b.DataReferencia = bf.DataReferencia ),0)),	")


            .AppendLine("	 bf.Estada = isnull((select sum(1) from @Base b where ResStatus = 'Estada' and b.DataReferencia = bf.DataReferencia ),0),	")
            .AppendLine("	 bf.Saidas = isnull((select sum(1) from @Base b where ResStatus = 'Saída' and b.DataReferencia = bf.DataReferencia ),0),	")
            .AppendLine("	 bf.Outras = isnull((select sum(1) from @Base b where ResStatus = 'Outras' and b.DataReferencia = bf.DataReferencia ),0),	")
            .AppendLine("	 bf.SomaTotal = isnull((isnull((select sum(1) from @Base b where ResStatus = 'Confirmada' and b.DataReferencia = bf.DataReferencia ),0)  	")
            .AppendLine("	  + isnull((select sum(1) from @Base b where ResStatus = 'Pendente de Pagamento' and b.DataReferencia = bf.DataReferencia ),0) 	")
            .AppendLine("	  + isnull((select sum(1) from @Base b where ResStatus = 'Pendente de Integrante' and b.DataReferencia = bf.DataReferencia ),0) 	")
            .AppendLine("	  + isnull((select sum(1) from @Base b where ResStatus = 'Estada' and b.DataReferencia = bf.DataReferencia ),0) 	")
            .AppendLine("	  + isnull((select sum(1) from @Base b where ResStatus = 'Saída' and b.DataReferencia = bf.DataReferencia ),0)),0) ")
            .AppendLine("	   from @BaseFinal bf	")

            .AppendLine("	   select * from @BaseFinal 	")

        End With
        Return PreencheListaOverBook(Conn.consulta(VarSql.ToString), "R")
    End Function


    Private Function PreencheListaOverBook(ResultadoConsulta As System.Data.SqlClient.SqlDataReader, OverOuRelacao As String) As IList
        Dim Lista As New ArrayList
        If ResultadoConsulta.HasRows Then
            While ResultadoConsulta.Read
                If OverOuRelacao = "O" Then 'OverBook
                    Dim objPrevisaoEstadaVO As New PrevisaoEstadaVO
                    With objPrevisaoEstadaVO
                        .DataReferencia = String.Format(ResultadoConsulta.Item("DataReferencia"), "dd/MM/yyyy")
                        .AcmId = ResultadoConsulta.Item("AcmId")
                        .AcmDescricao = ResultadoConsulta.Item("AcmDescricao")
                        .Vendidos = ResultadoConsulta.Item("Vendidos")
                        .Existentes = ResultadoConsulta.Item("Existentes")
                    End With
                    Lista.Add(objPrevisaoEstadaVO)
                Else
                    Dim objPrevisaoEstadaVO As New PrevisaoEstadaVO
                    With objPrevisaoEstadaVO
                        .DataReferencia = String.Format(ResultadoConsulta.Item("DataReferencia"), "dd/MM/yyyy")
                        '.AcmId = ResultadoConsulta.Item("AcmId")
                        '.AcmDescricao = ResultadoConsulta.Item("AcmDescricao")
                        '.Vendidos = ResultadoConsulta.Item("Vendidos")
                        '.Existentes = ResultadoConsulta.Item("Existentes")

                        .Confirmados = ResultadoConsulta.Item("Confirmados")
                        .PendPagamento = ResultadoConsulta.Item("PendPagamento")
                        .Estada = ResultadoConsulta.Item("Estada")
                        .PendIntegrante = ResultadoConsulta.Item("PendIntegrante")
                        .SubTotal = ResultadoConsulta.Item("SubTotal")
                        .Saidas = ResultadoConsulta.Item("Saidas")
                        .Outras = ResultadoConsulta.Item("Outras")
                        .SomaTotal = ResultadoConsulta.Item("SomaTotal")
                    End With
                    Lista.Add(objPrevisaoEstadaVO)
                End If
            End While
        End If
        ResultadoConsulta.Close()
        Return Lista
    End Function
End Class
